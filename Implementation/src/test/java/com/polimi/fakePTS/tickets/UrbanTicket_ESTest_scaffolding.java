/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Jan 05 22:15:56 GMT 2018
 */

package com.polimi.fakePTS.tickets;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class UrbanTicket_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.polimi.fakePTS.tickets.UrbanTicket"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.timezone", "Europe/Rome"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(UrbanTicket_ESTest_scaffolding.class.getClassLoader() ,
      "com.polimi.fakePTS.tickets.TicketType",
      "com.polimi.fakePTS.tickets.Ticket",
      "com.polimi.fakePTS.tickets.UrbanTicket",
      "com.polimi.fakePTS.RandomTicketId"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(UrbanTicket_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.polimi.fakePTS.RandomTicketId",
      "org.jsoup.nodes.Node",
      "org.jsoup.nodes.Element",
      "org.jsoup.parser.Tag",
      "org.jsoup.nodes.Attributes",
      "org.jsoup.nodes.Entities",
      "org.jsoup.nodes.Entities$EscapeMode",
      "org.jsoup.nodes.Document$OutputSettings$Syntax",
      "org.jsoup.nodes.Document$QuirksMode",
      "com.vaadin.ui.declarative.DesignContext",
      "com.vaadin.ui.declarative.ShouldWriteDataDelegate",
      "com.vaadin.server.VaadinService",
      "com.vaadin.util.CurrentInstance",
      "com.vaadin.util.ReflectTools",
      "com.vaadin.data.HasValue$ValueChangeListener",
      "com.vaadin.server.AbstractClientConnector",
      "com.vaadin.ui.AbstractComponent",
      "com.vaadin.ui.AbstractField",
      "com.vaadin.ui.RichTextArea",
      "com.vaadin.server.Sizeable$Unit",
      "com.vaadin.event.EventRouter",
      "com.vaadin.event.ListenerMethod",
      "com.vaadin.shared.communication.SharedState",
      "com.vaadin.shared.AbstractComponentState",
      "com.vaadin.shared.ui.TabIndexState",
      "com.vaadin.shared.AbstractFieldState",
      "com.vaadin.shared.ui.richtextarea.RichTextAreaState",
      "com.vaadin.shared.ui.ContentMode",
      "com.vaadin.shared.ui.ValueChangeMode",
      "com.vaadin.external.org.slf4j.LoggerFactory",
      "com.vaadin.external.org.slf4j.impl.StaticLoggerBinder",
      "com.vaadin.external.org.slf4j.helpers.NamedLoggerBase",
      "com.vaadin.external.org.slf4j.helpers.MarkerIgnoringBase",
      "com.vaadin.external.org.slf4j.impl.JDK14LoggerAdapter",
      "org.atmosphere.cpr.Action$TYPE",
      "org.atmosphere.cpr.Action",
      "org.atmosphere.cpr.AsynchronousProcessor",
      "org.atmosphere.container.TomcatCometSupport",
      "org.atmosphere.websocket.WebSocket",
      "org.apache.juli.logging.LogFactory",
      "org.apache.juli.logging.DirectJDKLog",
      "org.apache.tomcat.util.res.StringManager",
      "org.apache.tomcat.util.res.StringManager$1",
      "org.apache.tomcat.util.descriptor.web.XmlEncodingBase",
      "org.apache.tomcat.util.descriptor.web.Constants",
      "org.apache.tomcat.util.descriptor.web.SecurityConstraint",
      "com.vaadin.shared.communication.PushMode",
      "com.vaadin.server.Constants",
      "org.atmosphere.cache.DefaultBroadcasterCache",
      "org.atmosphere.cpr.BroadcasterCache",
      "com.vaadin.server.JsonPaintTarget",
      "org.atmosphere.cpr.AtmosphereResourceImpl",
      "com.vaadin.server.communication.AtmospherePushConnection",
      "org.atmosphere.util.Version",
      "org.jsoup.nodes.TextNode",
      "org.jsoup.nodes.Entities$CoreCharset",
      "com.vaadin.server.GenericFontIcon",
      "org.atmosphere.util.VoidServletConfig",
      "com.vaadin.ui.AbstractTextField",
      "com.vaadin.ui.TextField",
      "com.vaadin.ui.PasswordField",
      "com.vaadin.ui.AbstractTextField$AbstractTextFieldServerRpcImpl",
      "com.vaadin.server.ServerRpcManager",
      "com.vaadin.ui.AbstractTextField$AbstractTextFieldFocusAndBlurRpcImpl",
      "com.vaadin.shared.ui.textfield.AbstractTextFieldState",
      "com.vaadin.shared.ui.textfield.TextFieldState",
      "com.vaadin.shared.ui.passwordfield.PasswordFieldState",
      "com.vaadin.event.ConnectorEvent",
      "com.vaadin.server.ClientConnector$DetachEvent",
      "com.vaadin.ui.AbstractFocusable",
      "com.vaadin.ui.Button",
      "com.vaadin.ui.NativeButton",
      "com.vaadin.event.FieldEvents$FocusAndBlurServerRpcImpl",
      "com.vaadin.event.FieldEvents$FocusAndBlurServerRpcDecorator",
      "com.vaadin.ui.Button$1",
      "com.vaadin.server.AbstractExtension",
      "com.vaadin.ui.dnd.DragSourceExtension",
      "com.vaadin.ui.dnd.event.DragStartListener",
      "com.vaadin.shared.ui.dnd.DragSourceState",
      "com.vaadin.shared.ui.dnd.EffectAllowed",
      "com.vaadin.shared.ui.ComponentStateUtil",
      "com.vaadin.ui.dnd.event.DragEndListener",
      "org.atmosphere.container.NettyCometSupport",
      "org.atmosphere.cpr.AtmosphereFramework$1",
      "org.atmosphere.handler.AbstractReflectorAtmosphereHandler",
      "org.atmosphere.cpr.AtmosphereFramework",
      "com.vaadin.server.VaadinServlet",
      "org.apache.catalina.util.LifecycleBase",
      "org.apache.catalina.util.LifecycleMBeanBase",
      "org.apache.catalina.realm.RealmBase",
      "org.apache.catalina.realm.DataSourceRealm",
      "org.apache.catalina.LifecycleState",
      "org.apache.catalina.realm.RealmBase$AllRolesMode",
      "elemental.json.impl.JreJsonFactory",
      "elemental.json.impl.JreJsonValue",
      "elemental.json.impl.JreJsonObject",
      "elemental.json.impl.JreJsonString",
      "elemental.json.impl.JreJsonNumber",
      "elemental.json.impl.JsonUtil$StringifyJsonVisitor",
      "org.atmosphere.cpr.DefaultBroadcaster"
    );
  }
}

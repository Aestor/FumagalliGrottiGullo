/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 04 11:14:24 GMT 2018
 */

package com.polimi.travlendar.backend.model.events;

import org.junit.Test;
import static org.junit.Assert.*;
import com.polimi.travlendar.backend.model.events.TimeSelectorComponent;
import com.vaadin.server.Sizeable;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.VerticalLayout;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TimeSelectorComponent_ESTest extends TimeSelectorComponent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TimeSelectorComponent timeSelectorComponent0 = new TimeSelectorComponent("-3.~~iZ");
      timeSelectorComponent0.setMinute(9);
      assertTrue(timeSelectorComponent0.isVisible());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TimeSelectorComponent timeSelectorComponent0 = new TimeSelectorComponent("{pROSo83f");
      timeSelectorComponent0.setHour(0);
      String string0 = timeSelectorComponent0.getHour();
      assertEquals("00", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TimeSelectorComponent timeSelectorComponent0 = new TimeSelectorComponent("^g/_yv");
      timeSelectorComponent0.setMinute(3648);
      assertEquals(0, timeSelectorComponent0.getComponentCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TimeSelectorComponent timeSelectorComponent0 = new TimeSelectorComponent("^g/_yv");
      timeSelectorComponent0.setMinute((-4826));
      String string0 = timeSelectorComponent0.getMinute();
      assertEquals("0-4826", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TimeSelectorComponent timeSelectorComponent0 = new TimeSelectorComponent("^g/_yv");
      timeSelectorComponent0.setHour(1209);
      assertEquals(0, timeSelectorComponent0.getComponentCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TimeSelectorComponent timeSelectorComponent0 = new TimeSelectorComponent("J4nR");
      timeSelectorComponent0.setHour(9);
      assertTrue(timeSelectorComponent0.isVisible());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TimeSelectorComponent timeSelectorComponent0 = new TimeSelectorComponent("^g/_yv");
      String string0 = timeSelectorComponent0.getMinute();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TimeSelectorComponent timeSelectorComponent0 = new TimeSelectorComponent("+!c-3);");
      timeSelectorComponent0.clear();
      assertEquals(0, timeSelectorComponent0.getComponentCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TimeSelectorComponent timeSelectorComponent0 = new TimeSelectorComponent("{pROSo83f");
      String string0 = timeSelectorComponent0.getHour();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TimeSelectorComponent timeSelectorComponent0 = new TimeSelectorComponent("-3.~~iZ");
      HorizontalLayout horizontalLayout0 = timeSelectorComponent0.getLayout();
      assertEquals((-1.0F), horizontalLayout0.getHeight(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TimeSelectorComponent timeSelectorComponent0 = new TimeSelectorComponent("CTxzuLcB/pPyp");
      VerticalLayout verticalLayout0 = timeSelectorComponent0.getLayout2();
      assertEquals(Sizeable.Unit.PERCENTAGE, verticalLayout0.getWidthUnits());
  }
}

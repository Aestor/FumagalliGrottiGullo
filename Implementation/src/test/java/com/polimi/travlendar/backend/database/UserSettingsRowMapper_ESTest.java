/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 05 22:19:10 GMT 2018
 */

package com.polimi.travlendar.backend.database;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.polimi.travlendar.backend.database.UserSettingsRowMapper;
import com.polimi.travlendar.backend.model.user.PreferenceLevel;
import com.polimi.travlendar.backend.model.user.UserSettings;
import java.sql.ResultSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UserSettingsRowMapper_ESTest extends UserSettingsRowMapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UserSettingsRowMapper userSettingsRowMapper0 = new UserSettingsRowMapper();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("Medium", (String) null).when(resultSet0).getString(anyString());
      // Undeclared exception!
      try { 
        userSettingsRowMapper0.mapRow(resultSet0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.polimi.travlendar.backend.database.UserSettingsRowMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UserSettingsRowMapper userSettingsRowMapper0 = new UserSettingsRowMapper();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(true, true, false).when(resultSet0).getBoolean(anyString());
      doReturn((-1047)).when(resultSet0).getInt(anyString());
      doReturn("Medium", "Medium").when(resultSet0).getString(anyString());
      UserSettings userSettings0 = userSettingsRowMapper0.mapRow(resultSet0, 0);
      assertEquals(PreferenceLevel.MEDIUM, userSettings0.getBikePreference());
  }
}

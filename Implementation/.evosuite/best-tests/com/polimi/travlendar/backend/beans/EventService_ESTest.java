/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 04 11:00:51 GMT 2018
 */

package com.polimi.travlendar.backend.beans;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.polimi.travlendar.backend.beans.EventService;
import com.polimi.travlendar.backend.model.events.Meeting;
import com.polimi.travlendar.backend.model.user.PreferenceLevel;
import com.polimi.travlendar.backend.model.user.User;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.ZonedDateTime;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.evosuite.runtime.mock.java.time.MockZonedDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EventService_ESTest extends EventService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EventService eventService0 = new EventService();
      Meeting meeting0 = new Meeting(true);
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.ofInstant(localDateTime0, zoneOffset0, (ZoneId) zoneOffset0);
      meeting0.setEnd(zonedDateTime0);
      meeting0.setStart(zonedDateTime0);
      // Undeclared exception!
      try { 
        eventService0.editMeeting(meeting0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.polimi.travlendar.backend.beans.EventService", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Meeting meeting0 = new Meeting(true);
      PreferenceLevel preferenceLevel0 = PreferenceLevel.MEDIUM;
      meeting0.setPreferenceLevel(preferenceLevel0);
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      meeting0.setEnd(zonedDateTime0);
      meeting0.setStart(zonedDateTime0);
      Meeting.State meeting_State0 = Meeting.State.ended;
      meeting0.setState(meeting_State0);
      EventService eventService0 = new EventService();
      // Undeclared exception!
      try { 
        eventService0.addMeeting(meeting0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.polimi.travlendar.backend.beans.EventService", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EventService eventService0 = new EventService();
      Meeting meeting0 = new Meeting(false);
      Meeting.State meeting_State0 = Meeting.State.started;
      meeting0.setState(meeting_State0);
      PreferenceLevel preferenceLevel0 = PreferenceLevel.LOW;
      meeting0.setPreferenceLevel(preferenceLevel0);
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      meeting0.setEnd(zonedDateTime0);
      meeting0.setStart(zonedDateTime0);
      // Undeclared exception!
      try { 
        eventService0.addMeeting(meeting0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.polimi.travlendar.backend.beans.EventService", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EventService eventService0 = new EventService();
      Meeting meeting0 = new Meeting(false);
      Meeting.State meeting_State0 = Meeting.State.planned;
      meeting0.setState(meeting_State0);
      PreferenceLevel preferenceLevel0 = PreferenceLevel.HIGH;
      meeting0.setPreferenceLevel(preferenceLevel0);
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      meeting0.setEnd(zonedDateTime0);
      meeting0.setStart(zonedDateTime0);
      // Undeclared exception!
      try { 
        eventService0.addMeeting(meeting0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.polimi.travlendar.backend.beans.EventService", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      User user0 = new User();
      EventService eventService0 = new EventService();
      // Undeclared exception!
      try { 
        eventService0.getMeetings(user0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.polimi.travlendar.backend.beans.EventService", e);
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 05 21:52:25 GMT 2018
 */

package com.polimi.travlendar.gmaps;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.maps.model.DirectionsResult;
import com.google.maps.model.DirectionsRoute;
import com.google.maps.model.PlacesSearchResult;
import com.polimi.travlendar.gmaps.GoogleMapsService;
import com.polimi.travlendar.gmaps.LocationForm;
import com.polimi.travlendar.gmaps.PlaceSearchField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GoogleMapsService_ESTest extends GoogleMapsService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LocationForm locationForm0 = new LocationForm();
      GoogleMapsService googleMapsService0 = locationForm0.service;
      PlacesSearchResult placesSearchResult0 = new PlacesSearchResult();
      try { 
        googleMapsService0.calculateDirections((PlacesSearchResult) null, placesSearchResult0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.polimi.travlendar.gmaps.GoogleMapsService", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LocationForm locationForm0 = new LocationForm();
      PlaceSearchField placeSearchField0 = locationForm0.end;
      GoogleMapsService googleMapsService0 = placeSearchField0.service;
      try { 
        googleMapsService0.searchPlace((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URLEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GoogleMapsService googleMapsService0 = new GoogleMapsService();
      PlaceSearchField placeSearchField0 = new PlaceSearchField();
      // Undeclared exception!
      try { 
        googleMapsService0.predict(placeSearchField0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URLEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LocationForm locationForm0 = new LocationForm();
      GoogleMapsService googleMapsService0 = locationForm0.service;
      // Undeclared exception!
      try { 
        googleMapsService0.directionsDescription((DirectionsResult) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.polimi.travlendar.gmaps.GoogleMapsService", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LocationForm locationForm0 = new LocationForm();
      GoogleMapsService googleMapsService0 = locationForm0.service;
      DirectionsResult directionsResult0 = new DirectionsResult();
      DirectionsRoute[] directionsRouteArray0 = new DirectionsRoute[0];
      directionsResult0.routes = directionsRouteArray0;
      String string0 = googleMapsService0.directionsDescription(directionsResult0);
      assertEquals("Routes:\n\n", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      GoogleMapsService googleMapsService0 = new GoogleMapsService();
      PlaceSearchField placeSearchField0 = new PlaceSearchField();
      googleMapsService0.predict(placeSearchField0, "qM$[{,l0(4klr*");
      assertFalse(placeSearchField0.isAttached());
  }
}

/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 04 11:36:55 GMT 2018
 */

package com.polimi.fakePTS.tickets;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.polimi.fakePTS.tickets.TicketType;
import com.polimi.fakePTS.tickets.TrainTicket;
import java.time.ZonedDateTime;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockZonedDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TrainTicket_ESTest extends TrainTicket_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TicketType ticketType0 = TicketType.ONEMONTHPASS;
      TrainTicket trainTicket0 = new TrainTicket("RU^", "markAsDirty()", 687, ticketType0);
      assertEquals("zbTDgAwidQkn7ZLZ", trainTicket0.getId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TicketType ticketType0 = TicketType.YEARPASS;
      TrainTicket trainTicket0 = new TrainTicket("ZyK~J~Fbz>vd=]m", "ZyK~J~Fbz>vd=]m", (-3194), ticketType0);
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      trainTicket0.setValidationTime(zonedDateTime0);
      trainTicket0.toString();
      assertEquals("5Q9J80XrOYBGUU4x", trainTicket0.getId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TicketType ticketType0 = TicketType.YEARPASS;
      TrainTicket trainTicket0 = new TrainTicket("tAASz8Q,j`yD)y{`Zuy", "tAASz8Q,j`yD)y{`Zuy", 13, ticketType0);
      trainTicket0.getDepartureLocation();
      assertEquals("JTS4WvSh8NQq0ZK4", trainTicket0.getId());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TicketType ticketType0 = TicketType.SINGLE;
      TrainTicket trainTicket0 = new TrainTicket("", "", 2003, ticketType0);
      trainTicket0.getDepartureLocation();
      assertEquals("mXocxoPEi5jrP29W", trainTicket0.getId());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TicketType ticketType0 = TicketType.YEARPASS;
      TrainTicket trainTicket0 = new TrainTicket("tAASz8Q,j`yD)y{`Zuy", "tAASz8Q,j`yD)y{`Zuy", 13, ticketType0);
      trainTicket0.getArrivalLocation();
      assertEquals("WKsG58h23TR5Uh9c", trainTicket0.getId());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TicketType ticketType0 = TicketType.WEEKPASS;
      TrainTicket trainTicket0 = new TrainTicket("", "", (-511), ticketType0);
      trainTicket0.getArrivalLocation();
      assertEquals("KjPeucvwbNCPlyeJ", trainTicket0.getId());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TrainTicket trainTicket0 = null;
      try {
        trainTicket0 = new TrainTicket((String) null, "MeR UU", 229745864, (TicketType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.polimi.fakePTS.tickets.Ticket", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TicketType ticketType0 = TicketType.YEARPASS;
      TrainTicket trainTicket0 = new TrainTicket("tAASz8Q,j`yD)y{`Zuy", "tAASz8Q,j`yD)y{`Zuy", 13, ticketType0);
      trainTicket0.setDepartureLocation("tAASz8Q,j`yD)y{`Zuy");
      assertEquals("7tF0WH0t0bzBqxfb", trainTicket0.getId());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TicketType ticketType0 = TicketType.YEARPASS;
      TrainTicket trainTicket0 = new TrainTicket("ZyK~J~Fbz>vd=]m", "ZyK~J~Fbz>vd=]m", (-3194), ticketType0);
      // Undeclared exception!
      try { 
        trainTicket0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.polimi.fakePTS.tickets.TrainTicket", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TicketType ticketType0 = TicketType.YEARPASS;
      TrainTicket trainTicket0 = new TrainTicket("ZyK~J~Fbz>vd=]m", "ZyK~J~Fbz>vd=]m", (-3194), ticketType0);
      trainTicket0.setArrivalLocation("ZyK~J~Fbz>vd=]m");
      assertEquals("1T22CEa5qUMSSBRt", trainTicket0.getId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TicketType ticketType0 = TicketType.ONEMONTHPASS;
      TrainTicket trainTicket0 = new TrainTicket((String) null, (String) null, (-2104), ticketType0);
      trainTicket0.getArrivalLocation();
      assertEquals("ZqTdleeuvlLMUvZH", trainTicket0.getId());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TicketType ticketType0 = TicketType.YEARPASS;
      TrainTicket trainTicket0 = new TrainTicket((String) null, (String) null, 0, ticketType0);
      trainTicket0.getDepartureLocation();
      assertEquals("9qnBh253f0nRkx24", trainTicket0.getId());
  }
}

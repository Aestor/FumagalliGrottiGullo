/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 05 22:19:56 GMT 2018
 */

package com.polimi.travlendar.payment.checkout;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.polimi.travlendar.backend.beans.StripeService;
import com.polimi.travlendar.payment.checkout.ChargeController;
import com.polimi.travlendar.payment.checkout.ChargeRequest;
import com.stripe.exception.StripeException;
import com.stripe.model.Charge;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import org.springframework.ui.Model;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ChargeController_ESTest extends ChargeController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ChargeController chargeController0 = new ChargeController();
      StripeService stripeService0 = mock(StripeService.class, new ViolatedAssumptionAnswer());
      doReturn((Charge) null).when(stripeService0).charge(any(com.polimi.travlendar.payment.checkout.ChargeRequest.class));
      Injector.inject(chargeController0, (Class<?>) ChargeController.class, "paymentsService", (Object) stripeService0);
      Injector.validateBean(chargeController0, (Class<?>) ChargeController.class);
      ChargeRequest chargeRequest0 = mock(ChargeRequest.class, new ViolatedAssumptionAnswer());
      Model model0 = mock(Model.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        chargeController0.charge(chargeRequest0, model0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.polimi.travlendar.payment.checkout.ChargeController", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ChargeController chargeController0 = new ChargeController();
      StripeService stripeService0 = mock(StripeService.class, new ViolatedAssumptionAnswer());
      Injector.inject(chargeController0, (Class<?>) ChargeController.class, "paymentsService", (Object) stripeService0);
      Injector.validateBean(chargeController0, (Class<?>) ChargeController.class);
      // Undeclared exception!
      try { 
        chargeController0.handleError((Model) null, (StripeException) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.polimi.travlendar.payment.checkout.ChargeController", e);
      }
  }
}

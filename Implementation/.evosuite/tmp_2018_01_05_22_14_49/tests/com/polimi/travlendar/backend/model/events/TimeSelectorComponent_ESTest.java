/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 05 21:54:23 GMT 2018
 */

package com.polimi.travlendar.backend.model.events;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.polimi.travlendar.backend.model.events.TimeSelectorComponent;
import com.vaadin.server.Sizeable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TimeSelectorComponent_ESTest extends TimeSelectorComponent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TimeSelectorComponent timeSelectorComponent0 = new TimeSelectorComponent("");
      timeSelectorComponent0.setMinute(9);
      timeSelectorComponent0.setHour(9);
      timeSelectorComponent0.markAsDirty();
      assertEquals(Sizeable.Unit.PIXELS, timeSelectorComponent0.getHeightUnits());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TimeSelectorComponent timeSelectorComponent0 = new TimeSelectorComponent("aZt2&:");
      timeSelectorComponent0.setMinute(3081);
      String string0 = timeSelectorComponent0.getMinute();
      assertEquals("3081", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TimeSelectorComponent timeSelectorComponent0 = new TimeSelectorComponent("!");
      timeSelectorComponent0.setHour(1);
      String string0 = timeSelectorComponent0.getHour();
      assertEquals("01", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TimeSelectorComponent timeSelectorComponent0 = new TimeSelectorComponent("[h#");
      // Undeclared exception!
      try { 
        timeSelectorComponent0.before(timeSelectorComponent0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TimeSelectorComponent timeSelectorComponent0 = new TimeSelectorComponent("kE?5JP");
      // Undeclared exception!
      try { 
        timeSelectorComponent0.before((TimeSelectorComponent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.polimi.travlendar.backend.model.events.TimeSelectorComponent", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TimeSelectorComponent timeSelectorComponent0 = new TimeSelectorComponent("");
      timeSelectorComponent0.setHour(1);
      timeSelectorComponent0.setEnabled(false);
      TimeSelectorComponent timeSelectorComponent1 = new TimeSelectorComponent("TB/7");
      timeSelectorComponent1.setHour(2);
      timeSelectorComponent0.before(timeSelectorComponent1);
      String string0 = timeSelectorComponent0.getMinute();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TimeSelectorComponent timeSelectorComponent0 = new TimeSelectorComponent("(Y_XPV.fl\"");
      timeSelectorComponent0.setHour(1);
      timeSelectorComponent0.setMinute(1);
      timeSelectorComponent0.before(timeSelectorComponent0);
      timeSelectorComponent0.getLayout2();
      timeSelectorComponent0.clear();
      assertEquals((-1.0F), timeSelectorComponent0.getHeight(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TimeSelectorComponent timeSelectorComponent0 = new TimeSelectorComponent("");
      timeSelectorComponent0.getHour();
      timeSelectorComponent0.clear();
      String string0 = timeSelectorComponent0.getMinute();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      TimeSelectorComponent timeSelectorComponent0 = new TimeSelectorComponent("#-k9");
      timeSelectorComponent0.setHour(2535);
      timeSelectorComponent0.getLayout();
      timeSelectorComponent0.setMinute(2535);
      assertFalse(timeSelectorComponent0.isAttached());
  }
}

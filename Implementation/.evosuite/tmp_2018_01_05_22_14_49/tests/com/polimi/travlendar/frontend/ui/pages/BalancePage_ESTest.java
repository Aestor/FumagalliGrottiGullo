/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 05 22:26:08 GMT 2018
 */

package com.polimi.travlendar.frontend.ui.pages;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.polimi.travlendar.backend.beans.StripeService;
import com.polimi.travlendar.backend.model.user.User;
import com.polimi.travlendar.frontend.ui.forms.CheckoutForm;
import com.polimi.travlendar.frontend.ui.pages.BalancePage;
import com.vaadin.navigator.ViewChangeListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BalancePage_ESTest extends BalancePage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BalancePage balancePage0 = new BalancePage();
      CheckoutForm checkoutForm0 = mock(CheckoutForm.class, new ViolatedAssumptionAnswer());
      Injector.inject(balancePage0, (Class<?>) BalancePage.class, "cf", (Object) checkoutForm0);
      StripeService stripeService0 = mock(StripeService.class, new ViolatedAssumptionAnswer());
      doReturn((Long) null).when(stripeService0).getBalance();
      Injector.inject(balancePage0, (Class<?>) BalancePage.class, "service", (Object) stripeService0);
      User user0 = mock(User.class, new ViolatedAssumptionAnswer());
      Injector.inject(balancePage0, (Class<?>) BalancePage.class, "user", (Object) user0);
      Injector.validateBean(balancePage0, (Class<?>) BalancePage.class);
      ViewChangeListener.ViewChangeEvent viewChangeListener_ViewChangeEvent0 = mock(ViewChangeListener.ViewChangeEvent.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        balancePage0.enter(viewChangeListener_ViewChangeEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.polimi.travlendar.frontend.ui.pages.BalancePage$Balance", e);
      }
  }
}

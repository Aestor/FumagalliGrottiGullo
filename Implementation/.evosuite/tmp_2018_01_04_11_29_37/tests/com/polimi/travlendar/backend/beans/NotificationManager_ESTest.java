/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 04 11:15:31 GMT 2018
 */

package com.polimi.travlendar.backend.beans;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.polimi.travlendar.backend.beans.NotificationManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NotificationManager_ESTest extends NotificationManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NotificationManager notificationManager0 = new NotificationManager();
      ThreadGroup threadGroup0 = (ThreadGroup)notificationManager0.getUncaughtExceptionHandler();
      threadGroup0.interrupt();
      notificationManager0.run();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NotificationManager notificationManager0 = new NotificationManager();
      String string0 = notificationManager0.getText();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NotificationManager notificationManager0 = new NotificationManager();
      notificationManager0.setText("");
      String string0 = notificationManager0.getText();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NotificationManager notificationManager0 = new NotificationManager();
      NotificationManager notificationManager1 = notificationManager0.getInstance();
      NotificationManager notificationManager2 = notificationManager0.getInstance();
      assertSame(notificationManager2, notificationManager1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NotificationManager notificationManager0 = new NotificationManager();
      // Undeclared exception!
      try { 
        notificationManager0.run();
        fail("Expecting exception: IllegalMonitorStateException");
      
      } catch(IllegalMonitorStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.lang.Object", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NotificationManager notificationManager0 = new NotificationManager();
      notificationManager0.setText("i7O3^)r-tg^,w/:T*{");
      String string0 = notificationManager0.getText();
      assertEquals("i7O3^)r-tg^,w/:T*{", string0);
  }
}

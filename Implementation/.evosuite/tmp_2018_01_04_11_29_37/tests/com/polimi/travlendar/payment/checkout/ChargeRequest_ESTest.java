/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 04 10:38:59 GMT 2018
 */

package com.polimi.travlendar.payment.checkout;

import org.junit.Test;
import static org.junit.Assert.*;
import com.polimi.travlendar.payment.checkout.ChargeRequest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ChargeRequest_ESTest extends ChargeRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      boolean boolean0 = chargeRequest0.equals(chargeRequest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      chargeRequest0.setUser("Dg1");
      String string0 = chargeRequest0.getUser();
      assertEquals("Dg1", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      chargeRequest0.setUser("");
      String string0 = chargeRequest0.getUser();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      chargeRequest0.setStripeToken("JNp|EwJ");
      String string0 = chargeRequest0.getStripeToken();
      assertEquals("JNp|EwJ", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      chargeRequest0.setStripeToken("");
      String string0 = chargeRequest0.getStripeToken();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      chargeRequest0.setStripeEmail("$q/");
      String string0 = chargeRequest0.getStripeEmail();
      assertEquals("$q/", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      chargeRequest0.setAmount("ChargeRequest(amount=null, stripeEmail=null, stripeToken=null, user=null)");
      String string0 = chargeRequest0.getAmount();
      assertEquals("ChargeRequest(amount=null, stripeEmail=null, stripeToken=null, user=null)", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      boolean boolean0 = chargeRequest0.canEqual(chargeRequest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      Integer integer0 = new Integer((-2319));
      boolean boolean0 = chargeRequest0.canEqual(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      String string0 = chargeRequest0.getStripeEmail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      String string0 = chargeRequest0.getAmount();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      String string0 = chargeRequest0.getStripeToken();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      String string0 = chargeRequest0.getUser();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      ChargeRequest chargeRequest1 = new ChargeRequest();
      chargeRequest1.setUser("R-khkhc_\"jv`GhN)%oT");
      assertFalse(chargeRequest1.equals((Object)chargeRequest0));
      
      chargeRequest0.setUser("R-khkhc_\"jv`GhN)%oT");
      boolean boolean0 = chargeRequest0.equals(chargeRequest1);
      assertTrue(chargeRequest0.equals((Object)chargeRequest1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      chargeRequest0.setUser("ChargeRequest(amount=null, stripeEmail=null, stripeToken=null, user=null)");
      ChargeRequest chargeRequest1 = new ChargeRequest();
      boolean boolean0 = chargeRequest1.equals(chargeRequest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      ChargeRequest chargeRequest1 = new ChargeRequest();
      assertTrue(chargeRequest1.equals((Object)chargeRequest0));
      
      chargeRequest0.setUser("R-khkhc_\"jv`GhN)%oT");
      boolean boolean0 = chargeRequest0.equals(chargeRequest1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      chargeRequest0.setStripeToken("");
      ChargeRequest chargeRequest1 = new ChargeRequest();
      assertFalse(chargeRequest1.equals((Object)chargeRequest0));
      
      chargeRequest1.setStripeToken("");
      boolean boolean0 = chargeRequest0.equals(chargeRequest1);
      assertTrue(chargeRequest1.equals((Object)chargeRequest0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      ChargeRequest chargeRequest1 = new ChargeRequest();
      assertTrue(chargeRequest1.equals((Object)chargeRequest0));
      
      chargeRequest1.setStripeToken("5Y");
      boolean boolean0 = chargeRequest0.equals(chargeRequest1);
      assertFalse(chargeRequest1.equals((Object)chargeRequest0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      chargeRequest0.setStripeToken("");
      ChargeRequest chargeRequest1 = new ChargeRequest();
      boolean boolean0 = chargeRequest0.equals(chargeRequest1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      ChargeRequest chargeRequest1 = new ChargeRequest();
      chargeRequest1.setStripeEmail("");
      assertFalse(chargeRequest1.equals((Object)chargeRequest0));
      
      chargeRequest0.setStripeEmail("");
      boolean boolean0 = chargeRequest0.equals(chargeRequest1);
      assertTrue(chargeRequest1.equals((Object)chargeRequest0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      ChargeRequest chargeRequest1 = new ChargeRequest();
      assertTrue(chargeRequest1.equals((Object)chargeRequest0));
      
      chargeRequest1.setStripeEmail("}8_sy?\"ta)?a");
      boolean boolean0 = chargeRequest0.equals(chargeRequest1);
      assertFalse(chargeRequest1.equals((Object)chargeRequest0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      ChargeRequest chargeRequest1 = new ChargeRequest();
      assertTrue(chargeRequest1.equals((Object)chargeRequest0));
      
      chargeRequest0.setStripeEmail("");
      boolean boolean0 = chargeRequest0.equals(chargeRequest1);
      assertFalse(chargeRequest1.equals((Object)chargeRequest0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      chargeRequest0.setAmount("5");
      ChargeRequest chargeRequest1 = new ChargeRequest();
      assertFalse(chargeRequest1.equals((Object)chargeRequest0));
      
      chargeRequest1.setAmount("5");
      boolean boolean0 = chargeRequest0.equals(chargeRequest1);
      assertTrue(chargeRequest1.equals((Object)chargeRequest0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      ChargeRequest chargeRequest1 = new ChargeRequest();
      assertTrue(chargeRequest1.equals((Object)chargeRequest0));
      
      chargeRequest0.setAmount("5Y");
      boolean boolean0 = chargeRequest1.equals(chargeRequest0);
      assertFalse(chargeRequest1.equals((Object)chargeRequest0));
      assertFalse(chargeRequest0.equals((Object)chargeRequest1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      chargeRequest0.setAmount("5");
      ChargeRequest chargeRequest1 = new ChargeRequest();
      boolean boolean0 = chargeRequest0.equals(chargeRequest1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      boolean boolean0 = chargeRequest0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      chargeRequest0.setUser("");
      chargeRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      chargeRequest0.setStripeEmail(", stripeToken=");
      chargeRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      chargeRequest0.setAmount("ChargeRequest(amount=null, stripeEmail=null, stripeToken=null, user=null)");
      chargeRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      chargeRequest0.setStripeEmail("");
      String string0 = chargeRequest0.getStripeEmail();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      String string0 = chargeRequest0.toString();
      assertEquals("ChargeRequest(amount=null, stripeEmail=null, stripeToken=null, user=null)", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      chargeRequest0.setStripeToken("");
      chargeRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ChargeRequest chargeRequest0 = new ChargeRequest();
      chargeRequest0.setAmount("");
      String string0 = chargeRequest0.getAmount();
      assertEquals("", string0);
  }
}
